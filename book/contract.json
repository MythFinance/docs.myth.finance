{"name": "dualSTAKE Contract", "methods": [{"name": "keyreg_online", "args": [{"type": "byte[]", "name": "selection_key"}, {"type": "byte[]", "name": "voting_key"}, {"type": "byte[]", "name": "sp_key"}, {"type": "uint64", "name": "first_round"}, {"type": "uint64", "name": "last_round"}, {"type": "uint64", "name": "key_dilution"}, {"type": "uint64", "name": "fee"}], "returns": {"type": "void"}, "desc": "Fee admin or node runner only. Send keyreg online. Required payment if fee is not zero. fee must be 2A if escrow is not account eligible, otherwise"}, {"name": "keyreg_offline", "args": [], "returns": {"type": "void"}, "desc": "Fee admin method to send keyreg offline for an escrow account"}, {"name": "withdraw_node_runner_fees", "args": [{"type": "uint64", "name": "amount"}], "returns": {"type": "void"}, "desc": "withdraw node runner fees. callable by fee admin and node runner. hard coded to send to node runner address.\nthe fee admin may call this to pay out the current node runner before changing node runner address"}, {"name": "withdraw_platform_fees", "args": [{"type": "uint64", "name": "amount"}], "returns": {"type": "void"}}, {"name": "queue_update_fees", "args": [{"type": "uint16", "name": "new_platform_fee_bps"}, {"type": "uint16", "name": "new_noderunner_fee_bps"}], "returns": {"type": "uint64"}, "desc": "Fee admin only. Scheudles an update of the node+platform fees in bps. Changes enforced to +/- 2.5% delta max"}, {"name": "reset_update_fees", "args": [], "returns": {"type": "void"}, "desc": "Cancel a scheudled params update"}, {"name": "protest_stake", "args": [], "returns": {"type": "void"}}, {"name": "unprotest_stake", "args": [], "returns": {"type": "void"}, "desc": "public method. revoke protesting stake"}, {"name": "admin_unprotest_stake", "args": [{"type": "address", "name": "user"}], "returns": {"type": "void"}, "desc": "fee admin method. callable when there is no upgrade scheduled. returns the protesting LST to user $user"}, {"name": "dissolve_stake", "args": [], "returns": {"type": "void"}, "desc": "public method. called by user with protesting stake. dissolves their stake, returning ALGO+ASA"}, {"name": "admin_dissolve_stake", "args": [{"type": "address", "name": "user"}], "returns": {"type": "void"}, "desc": "fee admin method. called before upgrading to dissolve protesting stake for user $user. Returns ALGO And ASA to user."}, {"name": "configure", "args": [{"type": "byte[]", "name": "lst_asa_name"}, {"type": "byte[]", "name": "lst_unit_name"}, {"type": "byte[]", "name": "lst_url"}, {"type": "uint64", "name": "asa_id"}, {"type": "byte[]", "name": "lp_type"}, {"type": "byte[]", "name": "lp_id"}, {"type": "uint64", "name": "platform_fee_bps"}, {"type": "uint64", "name": "noderunner_fee_bps"}, {"type": "address", "name": "admin_addr"}, {"type": "address", "name": "fee_admin_addr"}, {"type": "address", "name": "noderunner_addr"}], "returns": {"type": "void"}}, {"name": "change_admin_1", "args": [{"type": "address", "name": "new_admin"}], "returns": {"type": "void"}, "desc": "first of 2-step admin change process. called by current admin"}, {"name": "change_admin_2", "args": [], "returns": {"type": "void"}, "desc": "second of 2-sep admin change process. called by new admin in atomic group after change_admin_1"}, {"name": "change_noderunner", "args": [{"type": "address", "name": "new_noderunner"}], "returns": {"type": "void"}, "desc": "change node runner address. node runner fees must be withdrawn before this, otherwise fee admin could steal node runner fees."}, {"name": "change_feeaddr", "args": [{"type": "address", "name": "new_feeaddr"}], "returns": {"type": "void"}}, {"name": "queue_upgrade", "args": [{"type": "byte[]", "name": "hashes"}], "returns": {"type": "void"}, "desc": "stage a contract upgrade. time applicability 2 weeks from current timestamp. hashes are variable length, 32b each, corresponding to SHA512_256 of approval program pages"}, {"name": "reset_upgrade", "args": [], "returns": {"type": "void"}, "desc": "clear a staged contract upgrade"}, {"name": "mint", "args": [], "returns": {"type": "void"}, "desc": "Public method. Mint dualSTAKE lst\nprevious transaction in group must be payment in ALGO if rate != 0, 2 txns before must be payment in ASA if must_swap, swap send dualSTAKE to caller"}, {"name": "redeem", "args": [], "returns": {"type": "void"}}, {"name": "get_rate", "args": [], "returns": {"type": "uint64"}}, {"name": "get_rate_and_balances", "args": [], "returns": {"type": "(uint64,uint64,uint64)"}}, {"name": "swap_or_fail", "args": [], "returns": {"type": "void"}}, {"name": "nullun", "args": [], "returns": {"type": "void"}, "desc": "Public empty method for opcode budget increase"}], "networks": {}}